<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:pc="http://schemas.microsoft.com/prototyping/2010/controls" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d"
	x:Class="hippocrate.App">
	<Application.Resources>
		<!-- Resources scoped at the Application level should be defined here. -->
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Microsoft.Expression.Prototyping.SketchControls;component/ScrollViewerStyles.xaml"/>
				<ResourceDictionary Source="/hippocrate.Screens;component/SketchStyles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
		<!-- Sketch ListBoxItem -->
			<Style x:Key="ListBoxItemStyleForPersonList" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Padding" Value="2,0,0,0"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListBoxItem}">
							<Grid x:Name="Bd" SnapsToDevicePixels="true" Background="#00FF0000">
								<pc:SketchRectangleUC x:Name="SketchRectangleUC" BorderBrush="{x:Null}" FocusVisualStyle="{DynamicResource FocusControl-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{x:Null}" Foreground="White"/>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" TargetName="SketchRectangleUC" Value="{DynamicResource MouseOverBackground-Sketch}"/>
									<Setter Property="BorderBrush" TargetName="SketchRectangleUC" Value="{DynamicResource MouseOverBackground-Sketch}"/>
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="True"/>
								<Trigger Property="IsSelected" Value="true">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
									<Setter Property="StrokeWidth" TargetName="SketchRectangleUC" Value="2"/>
									<Setter Property="ExtensionLength" TargetName="SketchRectangleUC" Value="0"/>
									<Setter Property="ExtensionVariance" TargetName="SketchRectangleUC" Value="0"/>
									<Setter Property="BorderBrush" TargetName="SketchRectangleUC" Value="{DynamicResource SelectedBackground-Sketch}"/>
									<Setter Property="Background" TargetName="SketchRectangleUC" Value="{DynamicResource SelectedBackground-Sketch}"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true"/>
										<Condition Property="Selector.IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="FontFamily" Value="{DynamicResource FontFamily-Sketch}"/>
				<Setter Property="FontWeight" Value="{DynamicResource FontWeight-Sketch}"/>
				<Setter Property="FontSize" Value="{DynamicResource SizeDouble-Sketch}"/>
				<Setter Property="Foreground" Value="{DynamicResource BaseForeground-Sketch}"/>
				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{DynamicResource DisabledForeground-Sketch}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DataGridRowPersonHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
							<Grid>
								<Grid.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Black" Offset="0"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Grid.Background>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
				<Setter Property="Width" Value="8"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Cursor" Value="SizeWE"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="DataGridColumnPersonHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}"/>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Rectangle Fill="#FF343434" />
                                <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto" Margin="8,2,31.557,2"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <TextBlock HorizontalAlignment="Right" Margin="0,0,8,0" TextWrapping="Wrap" Width="11.557" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="15.397" Foreground="White">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform><Span><Run Text="▲"/></Span></TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
			<Style x:Key="DataGridColumnHeaderStyleClassic" TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid>
								<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}"/>
								<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
								<Rectangle Fill="#FF343434" Stroke="Black"/>
								<ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto" Margin="8,2,0,2"/>
								<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<DataTemplate x:Key="DataGridPersonTemplate">
					<TextBlock Text="{Binding Name}" HorizontalAlignment="Left" TextWrapping="Wrap"  VerticalAlignment="Top"/>
				</DataTemplate>
			<Style x:Key="DataGridPersonRowStyle" TargetType="{x:Type DataGridRow}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="SnapsToDevicePixels" Value="true"/>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRow}">
							<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<SelectiveScrollingGrid>
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</SelectiveScrollingGrid.ColumnDefinitions>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</SelectiveScrollingGrid.RowDefinitions>
									<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
									<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
								</SelectiveScrollingGrid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ResourceDictionary>
	</Application.Resources>
</Application>